/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { IMyContext } from "./../src/interface"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ClassScheduleUpdateInput: { // input type
    classCode: string; // String!
    classScheduleId: number; // Int!
    sectionId: string; // String!
  }
  CreateClassInput: { // input type
    category: string; // String!
    classCode: string; // String!
    color: string; // String!
    coreDegreeId: number; // Int!
    courseType: string; // String!
    credits: number; // Int!
    dayOfWeek: string; // String!
    description: string; // String!
    electiveDegreeId: Array<number | null>; // [Int]!
    endTime: string; // String!
    professor: string; // String!
    rateMyProfessorRating: number; // Float!
    startTime: string; // String!
    title: string; // String!
  }
  CreateRequirementInput: { // input type
    category: string; // String!
    classIds: Array<number | null>; // [Int]!
    degreeId: number; // Int!
    isElective: boolean; // Boolean!
  }
  DegreePlannerDegreeInput: { // input type
    degreeId: number; // Int!
    title: string; // String!
    userId: string; // String!
  }
  LoginInput: { // input type
    email: string; // String!
    password: string; // String!
  }
  RegisterInput: { // input type
    email: string; // String!
    password: string; // String!
  }
  UpdateClassInput: { // input type
    category?: string | null; // String
    classCode?: string | null; // String
    color?: string | null; // String
    coreDegreeId?: number | null; // Int
    courseType?: string | null; // String
    credits?: number | null; // Int
    dayOfWeek?: string | null; // String
    description?: string | null; // String
    electiveDegreeId?: Array<number | null> | null; // [Int]
    endTime?: string | null; // String
    id: number; // Int!
    professor?: string | null; // String
    rateMyProfessorRating?: number | null; // Float
    startTime?: string | null; // String
    title?: string | null; // String
  }
  UpdateRequirementInput: { // input type
    category?: string | null; // String
    classIds?: Array<number | null> | null; // [Int]
    degreeId?: number | null; // Int
    id: number; // Int!
    isElective?: boolean | null; // Boolean
  }
  addClassToScheduleInput: { // input type
    id: string; // String!
    update: NexusGenInputs['ClassScheduleUpdateInput']; // ClassScheduleUpdateInput!
  }
  addClassToSemesterInput: { // input type
    classId: number; // Int!
    semesterId: number; // Int!
  }
  classTakenInput: { // input type
    id: string; // String!
  }
  createClassScheduleInput: { // input type
    semesterId?: string | null; // String
    userId: string; // String!
  }
  createDegreeInput: { // input type
    coreCategories: Array<string | null>; // [String]!
    electiveCategories: Array<string | null>; // [String]!
    name: string; // String!
    numberOfCores: number; // Int!
    numberOfElectives: number; // Int!
  }
  createDegreePlannerInput: { // input type
    degree: NexusGenInputs['DegreePlannerDegreeInput']; // DegreePlannerDegreeInput!
  }
  createSemesterInput: { // input type
    classIds?: Array<number | null> | null; // [Int]
    degreeId: number; // Int!
    name: string; // String!
    plannerId: number; // Int!
  }
  createTaskInput: { // input type
    task?: NexusGenInputs['taskInputFields'] | null; // taskInputFields
  }
  deleteClassInput: { // input type
    id: number; // Int!
  }
  deleteDegreeInput: { // input type
    id: number; // Int!
  }
  deleteTaskInput: { // input type
    id: number; // Int!
  }
  graduationSemesterInput: { // input type
    id: string; // String!
    semesterName: string; // String!
    year: number; // Int!
  }
  removeClassFromScheduleInput: { // input type
    id: string; // String!
    update: NexusGenInputs['ClassScheduleUpdateInput']; // ClassScheduleUpdateInput!
  }
  removeClassFromSemesterInput: { // input type
    classId: number; // Int!
    semesterId: number; // Int!
  }
  resetDegreePlannerInput: { // input type
    id: number; // Int!
  }
  semesterEntryInput: { // input type
    classId: number; // Int!
  }
  taskInputFields: { // input type
    classCode?: string | null; // String
    description?: string | null; // String
    dueDate: string; // String!
    stageId?: number | null; // Int
    title: string; // String!
  }
  updateClassScheduleInput: { // input type
    id: number; // Int!
    semesterId?: string | null; // String
  }
  updateDegreeInput: { // input type
    coreCategories?: Array<string | null> | null; // [String]
    electiveCategories?: Array<string | null> | null; // [String]
    id: number; // Int!
    name?: string | null; // String
    numberOfCores?: number | null; // Int
    numberOfElectives?: number | null; // Int
  }
  updateSemesterInput: { // input type
    entries?: NexusGenInputs['semesterEntryInput'][] | null; // [semesterEntryInput!]
    id: number; // Int!
    name?: string | null; // String
  }
  updateTaskFields: { // input type
    classCode?: string | null; // String
    description?: string | null; // String
    dueDate?: string | null; // String
    id: number; // Int!
    stageId?: number | null; // Int
    title?: string | null; // String
  }
  updateTaskInput: { // input type
    id: number; // Int!
    update?: NexusGenInputs['updateTaskFields'] | null; // updateTaskFields
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Class: { // root type
    category: string; // String!
    classCode: string; // String!
    classSchedules?: Array<NexusGenRootTypes['classSchedule'] | null> | null; // [classSchedule]
    color: string; // String!
    coreDegreeId: Array<number | null>; // [Int]!
    courseType: string; // String!
    credits: number; // Int!
    dayOfWeek: string; // String!
    description: string; // String!
    electiveDegreeId?: Array<number | null> | null; // [Int]
    endTime: string; // String!
    id: number; // Int!
    professor: string; // String!
    rateMyProfessorRating: number; // Float!
    sections?: Array<NexusGenRootTypes['classSection'] | null> | null; // [classSection]
    startTime: string; // String!
    title: string; // String!
  }
  Mutation: {};
  Query: {};
  classSchedule: { // root type
    entries?: Array<NexusGenRootTypes['classScheduleEntry'] | null> | null; // [classScheduleEntry]
    id: number; // Int!
    semesterId: string; // String!
    user?: NexusGenRootTypes['user'] | null; // user
    userId: string; // String!
  }
  classScheduleEntry: { // root type
    class?: NexusGenRootTypes['Class'] | null; // Class
    classId: number; // Int!
    classSchedule?: NexusGenRootTypes['classSchedule'] | null; // classSchedule
    classScheduleId: number; // Int!
    id: number; // Int!
    sectionId: number; // Int!
  }
  classSection: { // root type
    classId: number; // Int!
    dayOfWeek: string; // String!
    endTime: string; // String!
    id: number; // Int!
    professor: string; // String!
    rateMyProfessorRating?: string | null; // String
    section: number; // Int!
    startTime: string; // String!
  }
  classTakenResult: { // root type
    classIds: Array<number | null>; // [Int]!
  }
  degree: { // root type
    coreCategories: Array<string | null>; // [String]!
    electiveCategories: Array<string | null>; // [String]!
    id: number; // Int!
    name: string; // String!
    numberOfCores: number; // Int!
    numberOfElectives: number; // Int!
    semesters?: Array<NexusGenRootTypes['semester'] | null> | null; // [semester]
    users?: Array<NexusGenRootTypes['user'] | null> | null; // [user]
  }
  degreePlanner: { // root type
    degree?: NexusGenRootTypes['degree'] | null; // degree
    degreeId: number; // Int!
    id: number; // Int!
    semester?: Array<NexusGenRootTypes['semester'] | null> | null; // [semester]
    title: string; // String!
    user?: NexusGenRootTypes['user'] | null; // user
    userId: string; // String!
  }
  requirement: { // root type
    category: string; // String!
    classIds: Array<number | null>; // [Int]!
    degreeId: number; // Int!
    id: number; // Int!
    isElective: boolean; // Boolean!
  }
  semester: { // root type
    credits: number; // Int!
    degreeId: number; // Int!
    degreePlanner?: NexusGenRootTypes['degreePlanner'] | null; // degreePlanner
    entries?: Array<NexusGenRootTypes['semesterEntry'] | null> | null; // [semesterEntry]
    id: number; // Int!
    name: string; // String!
    plannerId: number; // Int!
  }
  semesterEntry: { // root type
    class?: NexusGenRootTypes['Class'] | null; // Class
    classId: number; // Int!
    id: number; // Int!
    semester?: NexusGenRootTypes['semester'] | null; // semester
    semesterId: number; // Int!
  }
  task: { // root type
    classCode?: string | null; // String
    description?: string | null; // String
    dueDate: string; // String!
    id: number; // Int!
    stageId: number; // Int!
    title: string; // String!
    user?: NexusGenRootTypes['user'] | null; // user
    userId: string; // String!
  }
  user: { // root type
    assignmentCompletionPercentage?: number | null; // Float
    attendancePercentage?: number | null; // Float
    classSchedules?: Array<NexusGenRootTypes['classSchedule'] | null> | null; // [classSchedule]
    degree?: NexusGenRootTypes['degree'] | null; // degree
    degreeId?: number | null; // Int
    degreePlanners?: Array<NexusGenRootTypes['degreePlanner'] | null> | null; // [degreePlanner]
    email: string; // String!
    gpa?: number | null; // Float
    graduationSemesterName?: string | null; // String
    id: string; // String!
    isPremium?: boolean | null; // Boolean
    isQuestionnaireCompleted?: boolean | null; // Boolean
    takenClassIds?: Array<number | null> | null; // [Int]
    tasks?: Array<NexusGenRootTypes['task'] | null> | null; // [task]
    university?: string | null; // String
    yearInUniversity?: number | null; // Int
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Class: { // field return type
    category: string; // String!
    classCode: string; // String!
    classSchedules: Array<NexusGenRootTypes['classSchedule'] | null> | null; // [classSchedule]
    color: string; // String!
    coreDegreeId: Array<number | null>; // [Int]!
    courseType: string; // String!
    credits: number; // Int!
    dayOfWeek: string; // String!
    description: string; // String!
    electiveDegreeId: Array<number | null> | null; // [Int]
    endTime: string; // String!
    id: number; // Int!
    professor: string; // String!
    rateMyProfessorRating: number; // Float!
    sections: Array<NexusGenRootTypes['classSection'] | null> | null; // [classSection]
    startTime: string; // String!
    title: string; // String!
  }
  Mutation: { // field return type
    addClassToClassSchedule: NexusGenRootTypes['classScheduleEntry'] | null; // classScheduleEntry
    addClassTosemester: NexusGenRootTypes['semesterEntry'] | null; // semesterEntry
    createClass: NexusGenRootTypes['Class'] | null; // Class
    createClassSchedule: NexusGenRootTypes['classSchedule'] | null; // classSchedule
    createDegree: NexusGenRootTypes['degree'] | null; // degree
    createDegreePlanner: NexusGenRootTypes['degreePlanner'] | null; // degreePlanner
    createDegreeRequirements: boolean | null; // Boolean
    createRequirement: NexusGenRootTypes['requirement'] | null; // requirement
    createSemester: NexusGenRootTypes['semester'] | null; // semester
    createTask: NexusGenRootTypes['task'] | null; // task
    deleteClass: NexusGenRootTypes['Class'] | null; // Class
    deleteClassSchedule: NexusGenRootTypes['classSchedule'] | null; // classSchedule
    deleteDegree: NexusGenRootTypes['degree'] | null; // degree
    deleteDegreePlanner: NexusGenRootTypes['degreePlanner'] | null; // degreePlanner
    deleteSemester: NexusGenRootTypes['semester'] | null; // semester
    deleteTask: NexusGenRootTypes['task'] | null; // task
    generateClassesFromScrape: NexusGenRootTypes['Class'] | null; // Class
    login: string | null; // String
    logout: boolean | null; // Boolean
    register: string | null; // String
    removeClassFromClassSchedule: NexusGenRootTypes['classScheduleEntry'] | null; // classScheduleEntry
    removeClassFromSemester: NexusGenRootTypes['semesterEntry'] | null; // semesterEntry
    resetDegreePlanner: NexusGenRootTypes['degreePlanner'] | null; // degreePlanner
    setUserGraduationSemester: NexusGenRootTypes['user'] | null; // user
    updateClass: NexusGenRootTypes['Class'] | null; // Class
    updateClassSchedule: NexusGenRootTypes['classSchedule'] | null; // classSchedule
    updateDegree: NexusGenRootTypes['degree'] | null; // degree
    updatePremiumStatus: NexusGenRootTypes['user'] | null; // user
    updateRequirement: NexusGenRootTypes['requirement'] | null; // requirement
    updateSemester: NexusGenRootTypes['semester'] | null; // semester
    updateTask: NexusGenRootTypes['task'] | null; // task
    updateUserAcademicInfo: NexusGenRootTypes['user'] | null; // user
    updateUserProfile: NexusGenRootTypes['user'] | null; // user
  }
  Query: { // field return type
    classTaken: NexusGenRootTypes['classTakenResult'] | null; // classTakenResult
    getAlldegrees: Array<NexusGenRootTypes['degree'] | null> | null; // [degree]
    getClass: NexusGenRootTypes['Class'] | null; // Class
    getClassScheduleEntries: Array<NexusGenRootTypes['classScheduleEntry'] | null> | null; // [classScheduleEntry]
    getClassSchedules: Array<NexusGenRootTypes['classSchedule'] | null> | null; // [classSchedule]
    getClasses: Array<NexusGenRootTypes['Class'] | null> | null; // [Class]
    getDegree: NexusGenRootTypes['degree'] | null; // degree
    getGraduationSemester: string | null; // String
    getPremiumStatus: boolean | null; // Boolean
    getRequirement: Array<NexusGenRootTypes['requirement'] | null> | null; // [requirement]
    getRequirements: Array<NexusGenRootTypes['requirement'] | null> | null; // [requirement]
    getSemester: NexusGenRootTypes['semester'] | null; // semester
    getTasks: Array<NexusGenRootTypes['task'] | null> | null; // [task]
    getUser: NexusGenRootTypes['user'] | null; // user
    getdegreePlanners: Array<NexusGenRootTypes['degreePlanner'] | null> | null; // [degreePlanner]
    getsemesters: Array<NexusGenRootTypes['semester'] | null> | null; // [semester]
    me: NexusGenRootTypes['user'] | null; // user
  }
  classSchedule: { // field return type
    entries: Array<NexusGenRootTypes['classScheduleEntry'] | null> | null; // [classScheduleEntry]
    id: number; // Int!
    semesterId: string; // String!
    user: NexusGenRootTypes['user'] | null; // user
    userId: string; // String!
  }
  classScheduleEntry: { // field return type
    class: NexusGenRootTypes['Class'] | null; // Class
    classId: number; // Int!
    classSchedule: NexusGenRootTypes['classSchedule'] | null; // classSchedule
    classScheduleId: number; // Int!
    id: number; // Int!
    sectionId: number; // Int!
  }
  classSection: { // field return type
    classId: number; // Int!
    dayOfWeek: string; // String!
    endTime: string; // String!
    id: number; // Int!
    professor: string; // String!
    rateMyProfessorRating: string | null; // String
    section: number; // Int!
    startTime: string; // String!
  }
  classTakenResult: { // field return type
    classIds: Array<number | null>; // [Int]!
  }
  degree: { // field return type
    coreCategories: Array<string | null>; // [String]!
    electiveCategories: Array<string | null>; // [String]!
    id: number; // Int!
    name: string; // String!
    numberOfCores: number; // Int!
    numberOfElectives: number; // Int!
    semesters: Array<NexusGenRootTypes['semester'] | null> | null; // [semester]
    users: Array<NexusGenRootTypes['user'] | null> | null; // [user]
  }
  degreePlanner: { // field return type
    degree: NexusGenRootTypes['degree'] | null; // degree
    degreeId: number; // Int!
    id: number; // Int!
    semester: Array<NexusGenRootTypes['semester'] | null> | null; // [semester]
    title: string; // String!
    user: NexusGenRootTypes['user'] | null; // user
    userId: string; // String!
  }
  requirement: { // field return type
    category: string; // String!
    classIds: Array<number | null>; // [Int]!
    degreeId: number; // Int!
    id: number; // Int!
    isElective: boolean; // Boolean!
  }
  semester: { // field return type
    credits: number; // Int!
    degreeId: number; // Int!
    degreePlanner: NexusGenRootTypes['degreePlanner'] | null; // degreePlanner
    entries: Array<NexusGenRootTypes['semesterEntry'] | null> | null; // [semesterEntry]
    id: number; // Int!
    name: string; // String!
    plannerId: number; // Int!
  }
  semesterEntry: { // field return type
    class: NexusGenRootTypes['Class'] | null; // Class
    classId: number; // Int!
    id: number; // Int!
    semester: NexusGenRootTypes['semester'] | null; // semester
    semesterId: number; // Int!
  }
  task: { // field return type
    classCode: string | null; // String
    description: string | null; // String
    dueDate: string; // String!
    id: number; // Int!
    stageId: number; // Int!
    title: string; // String!
    user: NexusGenRootTypes['user'] | null; // user
    userId: string; // String!
  }
  user: { // field return type
    assignmentCompletionPercentage: number | null; // Float
    attendancePercentage: number | null; // Float
    classSchedules: Array<NexusGenRootTypes['classSchedule'] | null> | null; // [classSchedule]
    degree: NexusGenRootTypes['degree'] | null; // degree
    degreeId: number | null; // Int
    degreePlanners: Array<NexusGenRootTypes['degreePlanner'] | null> | null; // [degreePlanner]
    email: string; // String!
    gpa: number | null; // Float
    graduationSemesterName: string | null; // String
    id: string; // String!
    isPremium: boolean | null; // Boolean
    isQuestionnaireCompleted: boolean | null; // Boolean
    takenClassIds: Array<number | null> | null; // [Int]
    tasks: Array<NexusGenRootTypes['task'] | null> | null; // [task]
    university: string | null; // String
    yearInUniversity: number | null; // Int
  }
}

export interface NexusGenFieldTypeNames {
  Class: { // field return type name
    category: 'String'
    classCode: 'String'
    classSchedules: 'classSchedule'
    color: 'String'
    coreDegreeId: 'Int'
    courseType: 'String'
    credits: 'Int'
    dayOfWeek: 'String'
    description: 'String'
    electiveDegreeId: 'Int'
    endTime: 'String'
    id: 'Int'
    professor: 'String'
    rateMyProfessorRating: 'Float'
    sections: 'classSection'
    startTime: 'String'
    title: 'String'
  }
  Mutation: { // field return type name
    addClassToClassSchedule: 'classScheduleEntry'
    addClassTosemester: 'semesterEntry'
    createClass: 'Class'
    createClassSchedule: 'classSchedule'
    createDegree: 'degree'
    createDegreePlanner: 'degreePlanner'
    createDegreeRequirements: 'Boolean'
    createRequirement: 'requirement'
    createSemester: 'semester'
    createTask: 'task'
    deleteClass: 'Class'
    deleteClassSchedule: 'classSchedule'
    deleteDegree: 'degree'
    deleteDegreePlanner: 'degreePlanner'
    deleteSemester: 'semester'
    deleteTask: 'task'
    generateClassesFromScrape: 'Class'
    login: 'String'
    logout: 'Boolean'
    register: 'String'
    removeClassFromClassSchedule: 'classScheduleEntry'
    removeClassFromSemester: 'semesterEntry'
    resetDegreePlanner: 'degreePlanner'
    setUserGraduationSemester: 'user'
    updateClass: 'Class'
    updateClassSchedule: 'classSchedule'
    updateDegree: 'degree'
    updatePremiumStatus: 'user'
    updateRequirement: 'requirement'
    updateSemester: 'semester'
    updateTask: 'task'
    updateUserAcademicInfo: 'user'
    updateUserProfile: 'user'
  }
  Query: { // field return type name
    classTaken: 'classTakenResult'
    getAlldegrees: 'degree'
    getClass: 'Class'
    getClassScheduleEntries: 'classScheduleEntry'
    getClassSchedules: 'classSchedule'
    getClasses: 'Class'
    getDegree: 'degree'
    getGraduationSemester: 'String'
    getPremiumStatus: 'Boolean'
    getRequirement: 'requirement'
    getRequirements: 'requirement'
    getSemester: 'semester'
    getTasks: 'task'
    getUser: 'user'
    getdegreePlanners: 'degreePlanner'
    getsemesters: 'semester'
    me: 'user'
  }
  classSchedule: { // field return type name
    entries: 'classScheduleEntry'
    id: 'Int'
    semesterId: 'String'
    user: 'user'
    userId: 'String'
  }
  classScheduleEntry: { // field return type name
    class: 'Class'
    classId: 'Int'
    classSchedule: 'classSchedule'
    classScheduleId: 'Int'
    id: 'Int'
    sectionId: 'Int'
  }
  classSection: { // field return type name
    classId: 'Int'
    dayOfWeek: 'String'
    endTime: 'String'
    id: 'Int'
    professor: 'String'
    rateMyProfessorRating: 'String'
    section: 'Int'
    startTime: 'String'
  }
  classTakenResult: { // field return type name
    classIds: 'Int'
  }
  degree: { // field return type name
    coreCategories: 'String'
    electiveCategories: 'String'
    id: 'Int'
    name: 'String'
    numberOfCores: 'Int'
    numberOfElectives: 'Int'
    semesters: 'semester'
    users: 'user'
  }
  degreePlanner: { // field return type name
    degree: 'degree'
    degreeId: 'Int'
    id: 'Int'
    semester: 'semester'
    title: 'String'
    user: 'user'
    userId: 'String'
  }
  requirement: { // field return type name
    category: 'String'
    classIds: 'Int'
    degreeId: 'Int'
    id: 'Int'
    isElective: 'Boolean'
  }
  semester: { // field return type name
    credits: 'Int'
    degreeId: 'Int'
    degreePlanner: 'degreePlanner'
    entries: 'semesterEntry'
    id: 'Int'
    name: 'String'
    plannerId: 'Int'
  }
  semesterEntry: { // field return type name
    class: 'Class'
    classId: 'Int'
    id: 'Int'
    semester: 'semester'
    semesterId: 'Int'
  }
  task: { // field return type name
    classCode: 'String'
    description: 'String'
    dueDate: 'String'
    id: 'Int'
    stageId: 'Int'
    title: 'String'
    user: 'user'
    userId: 'String'
  }
  user: { // field return type name
    assignmentCompletionPercentage: 'Float'
    attendancePercentage: 'Float'
    classSchedules: 'classSchedule'
    degree: 'degree'
    degreeId: 'Int'
    degreePlanners: 'degreePlanner'
    email: 'String'
    gpa: 'Float'
    graduationSemesterName: 'String'
    id: 'String'
    isPremium: 'Boolean'
    isQuestionnaireCompleted: 'Boolean'
    takenClassIds: 'Int'
    tasks: 'task'
    university: 'String'
    yearInUniversity: 'Int'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addClassToClassSchedule: { // args
      input: NexusGenInputs['addClassToScheduleInput']; // addClassToScheduleInput!
    }
    addClassTosemester: { // args
      input: NexusGenInputs['addClassToSemesterInput']; // addClassToSemesterInput!
    }
    createClass: { // args
      input: NexusGenInputs['CreateClassInput']; // CreateClassInput!
    }
    createClassSchedule: { // args
      input?: NexusGenInputs['createClassScheduleInput'] | null; // createClassScheduleInput
    }
    createDegree: { // args
      input: NexusGenInputs['createDegreeInput']; // createDegreeInput!
    }
    createDegreePlanner: { // args
      input: NexusGenInputs['createDegreePlannerInput']; // createDegreePlannerInput!
    }
    createDegreeRequirements: { // args
      degreeId: number; // Int!
    }
    createRequirement: { // args
      data: NexusGenInputs['CreateRequirementInput']; // CreateRequirementInput!
    }
    createSemester: { // args
      input: NexusGenInputs['createSemesterInput']; // createSemesterInput!
    }
    createTask: { // args
      input?: NexusGenInputs['createTaskInput'] | null; // createTaskInput
    }
    deleteClass: { // args
      input: NexusGenInputs['deleteClassInput']; // deleteClassInput!
    }
    deleteClassSchedule: { // args
      id: number; // Int!
    }
    deleteDegree: { // args
      input: NexusGenInputs['deleteDegreeInput']; // deleteDegreeInput!
    }
    deleteDegreePlanner: { // args
      id: number; // Int!
    }
    deleteSemester: { // args
      id: number; // Int!
    }
    deleteTask: { // args
      input?: NexusGenInputs['deleteTaskInput'] | null; // deleteTaskInput
    }
    login: { // args
      input: NexusGenInputs['LoginInput']; // LoginInput!
    }
    register: { // args
      input: NexusGenInputs['RegisterInput']; // RegisterInput!
    }
    removeClassFromClassSchedule: { // args
      input: NexusGenInputs['removeClassFromScheduleInput']; // removeClassFromScheduleInput!
    }
    removeClassFromSemester: { // args
      input: NexusGenInputs['removeClassFromSemesterInput']; // removeClassFromSemesterInput!
    }
    resetDegreePlanner: { // args
      input: NexusGenInputs['resetDegreePlannerInput']; // resetDegreePlannerInput!
    }
    setUserGraduationSemester: { // args
      input: NexusGenInputs['graduationSemesterInput']; // graduationSemesterInput!
    }
    updateClass: { // args
      input: NexusGenInputs['UpdateClassInput']; // UpdateClassInput!
    }
    updateClassSchedule: { // args
      input: NexusGenInputs['updateClassScheduleInput']; // updateClassScheduleInput!
    }
    updateDegree: { // args
      input: NexusGenInputs['updateDegreeInput']; // updateDegreeInput!
    }
    updatePremiumStatus: { // args
      id: string; // String!
      isPremium: boolean; // Boolean!
    }
    updateRequirement: { // args
      data: NexusGenInputs['UpdateRequirementInput']; // UpdateRequirementInput!
    }
    updateSemester: { // args
      input: NexusGenInputs['updateSemesterInput']; // updateSemesterInput!
    }
    updateTask: { // args
      input?: NexusGenInputs['updateTaskInput'] | null; // updateTaskInput
    }
    updateUserAcademicInfo: { // args
      assignmentCompletionPercentage?: number | null; // Float
      attendancePercentage?: number | null; // Float
      gpa?: number | null; // Float
      id: string; // String!
      takenClassIds?: Array<number | null> | null; // [Int]
    }
    updateUserProfile: { // args
      degreeId?: number | null; // Int
      id: string; // String!
      questionnaireCompleted?: boolean | null; // Boolean
      university?: string | null; // String
      yearInUniversity?: number | null; // Int
    }
  }
  Query: {
    classTaken: { // args
      input: NexusGenInputs['classTakenInput']; // classTakenInput!
    }
    getClass: { // args
      id: number; // Int!
    }
    getClassScheduleEntries: { // args
      classScheduleId: number; // Int!
    }
    getDegree: { // args
      userId: string; // String!
    }
    getGraduationSemester: { // args
      id: string; // String!
    }
    getPremiumStatus: { // args
      id: string; // String!
    }
    getRequirement: { // args
      category: string; // String!
      degreeId: number; // Int!
    }
    getRequirements: { // args
      degreeId: number; // Int!
    }
    getSemester: { // args
      id: number; // Int!
    }
    getUser: { // args
      id: string; // String!
    }
    getdegreePlanners: { // args
      userId: string; // String!
    }
    getsemesters: { // args
      plannerId: number; // Int!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: IMyContext;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
}